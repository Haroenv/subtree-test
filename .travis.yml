# You must sign into travis-ci.org and set the commit hook on your project for travis to
# run on your project. The secure: variable must be generated by running `travis encrypt`
# on a github oauth key that you can generate using curl.

language:
    node_js
node_js:
    - 5.7.0
branches:
    only:
        - master
env:
    global:
        # GH_OAUTH_TOKEN is the oauth token generated as described at
        # https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
        #
        # curl -u 'username' -d '{"scopes":["repo"],"note":"push to gh-pages from travis"}' https://api.github.com/authorizations
        #
        # It must be encrypted using the travis gem
        # http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables
        #
        # travis encrypt GH_OAUTH_TOKEN=XXXXXXXXXXXXXXX
        #
        # User specific env variables
        - secure: fUwRG1KLQ8QcdmsYKPtE4IefnWWvTBCi70oGFg3luCGKgFwiaocIkJOow3aPE3ki9DYNGQUlHdZjYw9DaF2bpu+WHpLe7Txn0PxiL5wQLE9MqNb2BSsDjLYTXSqiedhEs5Co6eLm5a/gbS9r1Qo904/BCqOsOqrgxkQh3tF8XQgAUMjgMuQxOsgbF7Q7vEyREo97XSY/nwsN8kdnQ5U0VieJfW6hhDynkRbxjTTMKHXLNh8Nfvqvbt06UC6LhBYPJA79uLZn58hG/YH22hihvP7G+vUFlXFYzIOBM2qZppH3SBvvdjndELuwnXappRU5ezK/DuOKT6ptfXc4x05q5nC2YbrVm3ZNUfiztS7ECKG9fiEPBbysavx3pvFUCM/ETFrIWapwca/uarmznMCqvtprQ820n4kCfVduXXWuwk+VHb/8vV9gYLWgNpJQl/XdEgMQ/XgEnXpUTz6pnUhw63kSQ7ToVMyHX/t2Me2GwNyhTc7ZsGA7gQl9ixMKk/1kRCk2mlUHcge4E8Y6yIVByj+bSepiATQgmuAooFJ+/G1J45MDAjFcIAsXHZX+x//SSz6TBJaCb2LP/sCZxVqCmMQi083A07bQqfapo2r5hZC4rcqtiUTQPDFTc2fpHLo3+iByYVg2Gx+TfowARFtAGS882elYieAH6rqlVGGD+zQ=
        - GH_OWNER=haroenv
        - GH_PROJECT_NAME=subtree-test

before_script:
    # install dependencies
    - gem update --system
    - npm install
script:
    # We want to gate on passing tests and a successful build
    - gulp
after_success:
    # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then git submodule add -b gh-pages https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME} site > /dev/null 2>&1; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then cd site; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then if git checkout gh-pages; then git checkout -b gh-pages; fi; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then git rm -r .; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then cp -R ../dist/* .; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then cp ../dist/.* .; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then git add -f .; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then git config user.email "hello@haroen.me"; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then git config user.name "Haroen Viaene"; fi
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then git commit -am "travis build [ci skip]"; fi
    # Any command that using GH_OAUTH_TOKEN must pipe the output to /dev/null to not expose your oauth token
    - if [[ $TRAVIS_PULL_REQUEST == 'false' ]]; then git push https://${GH_OAUTH_TOKEN}@github.com/${GH_OWNER}/${GH_PROJECT_NAME} HEAD:gh-pages > /dev/null 2>&1; fi
